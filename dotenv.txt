# Commented out values are what the application sets as a default. You don't
# need to set them unless you plan to override their default values.

COMPOSE_PROJECT_NAME=dataweb

# You'll always want to set the POSTGRES_USER and POSTGRES_PASSWORD since the
# postgres Docker image uses them for its default database user and password.
POSTGRES_USER=dataweb
POSTGRES_PASSWORD=password
#POSTGRES_HOST=postgres
#POSTGRES_PORT=5432
#POSTGRES_DB=dataweb

# Which Celery backend server should you connect to?
#CELERY_BROKER_URL=redis://redis:6379/0

# In development, having bytecode laying around can cause all sorts of weird
# issues with Docker. These are *.pyc file and the __pycache__/ folder.
PYTHONDONTWRITEBYTECODE=true

# Which environment is running? This should be "development" or "production".
FLASK_ENV=development

# Which log level should be used for Python's logger?
#LOG_LEVEL=DEBUG

# You should generate a random string of 64+ characters for this value in prod.
SECRET_KEY=insecure_key_for_dev

# What mail server should you connect to?
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USE_SSL=false
MAIL_USERNAME=whatjr0003@gmail.com
MAIL_PASSWORD=santasusana
MAIL_DEFAULT_SENDER=contact@local.host

# What email address and password should be used for the seed user?
SEED_ADMIN_EMAIL=dev@local.host
SEED_ADMIN_PASSWORD=password

# Google Analytics.
#ANALYTICS_GOOGLE_UA=

# With Docker for Windows / Mac / Linux then this default value should work.
# If you have Docker running in a VM, put the VM's IP address here instead.
#SERVER_NAME=localhost:8000

# Do you want code reloading to work with your app server? Don't do this in
# production (it's turned off by default, so don't worry about it).
WEB_RELOAD=true

# Which address and port should gunicorn bind to?
#WEB_BIND=0.0.0.0:8000

# How many workers and threads should your app use?
WEB_CONCURRENCY=1
#PYTHON_MAX_THREADS=1

# Should Docker restart your containers if they go down?
DOCKER_RESTART_POLICY=no

# What healthcheck test command do you want to run? In development, having it
# curl your web server will result in a lot of log spam, so setting it to
# /bin/true is an easy way to make the healthcheck do basically nothing.
DOCKER_HEALTHCHECK_TEST=/bin/true

# How long should Docker wait before it SIGKILLs your process?
#DOCKER_STOP_GRACE_PERIOD=3s

# What port should be published back to the Docker host for your app server?
DOCKER_WEB_PORT=8000

# What volume path should be used?
DOCKER_WEB_VOLUME=.:/app

# What port should be published back to the Docker host? Be careful with using
# 0.0.0.0 or no host on the left because then anyone will be able to attempt to
# log in to your PostgreSQL server since the port would be publicly accessible.
#
# If you're using Docker for Windows / Mac, it's safe to keep it as is and you
# will be able to connect to PostgreSQL with external tools like pgadmin.
# Change this to your VM's IP address if you're using the Docker Toolbox.
#DOCKER_POSTGRES_PORT=127.0.0.1:5432:5432
